{
  // Common Settings A-> B
  "files.autoSave": "onFocusChange",
  "editor.wordWrap": "on",
  // "editor.tabSize": 2,
  "editor.lineHeight": 25,
  "editor.cursorWidth": 3,
  "explorer.confirmDelete": false,
  "editor.minimap.renderCharacters": false,
  "terminal.integrated.lineHeight": 1.2,
  "editor.fontSize": 14,
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.confirmOnExit": "always",
  //
  //
  //
  //
  //@Win10
  // "editor.fontFamily": "'CaskaydiaCove NF', Consolas, 'Courier New', monospace",
  // "terminal.integrated.fontFamily": "'CaskaydiaCove NF', Consolas, 'Courier New', monospace",
  //
  //
  //
  //
  //@ArchLinux
  // Check your font available, Run this command:
  // fc-list | grep 'SauceCodePro Nerd Font'
  //
  // The best font is: 'SauceCodePro Nerd Font', bc it dont missing some icon.
  // "editor.fontFamily": "'FiraCode Nerd Font', 'CaskaydiaCove Nerd Font', 'Source Code Pro','Iosevka Nerd Font', 'Comic Code Demo' Consolas, 'Courier New', monospace",
  // "terminal.integrated.fontFamily": "'FiraCode Nerd Font', 'CaskaydiaCove Nerd Font', 'Source Code Pro', Consolas, 'Courier New', monospace",
  "editor.fontFamily": "'SauceCodePro Nerd Font', 'Caskaydia Cove Nerd Font',  Consolas, 'Courier New', monospace",
  //  'Caskaydia Cove Nerd Font', 'SauceCodePro Nerd Font', 'FiraCode Nerd Font',
  "terminal.integrated.fontFamily": "'SauceCodePro Nerd Font', Consolas, 'Courier New', monospace",
  // 'Caskaydia Cove Nerd Font', 'SauceCodePro Nerd Font', 'FiraCode Nerd Font', 'Source Code Pro',
  //
  //
  //
  //
  // @MacOS
  // "editor.fontFamily": "'CaskaydiaCove Nerd Font', Consolas, 'Courier New', monospace",
  // "terminal.integrated.fontFamily": "'CaskaydiaCove Nerd Font', Consolas, 'Courier New', monospace",
  //
  //
  // VScode Terminal settings
  // "terminal.integrated.fontFamily": "'FiraCode Nerd Font Mono', Consolas, 'Courier New', monospace",
  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  // @sync os=windows
  // VScode Terminal settings
  // "terminal.integrated.fontFamily": "CaskaydiaCove NF",
  // "terminal.integrated.defaultProfile.windows": "PowerShell",
  // "terminalCursor.background": "#A89984",
  "editor.fontLigatures": true,
  "sync.gist": "b9e278ec67f02af324aa21b395e885f3",
  "sync.autoUpload": true,
  "sync.autoDownload": true,
  "workbench.preferredDarkColorTheme": "Solarized Dark",
  "workbench.preferredHighContrastColorTheme": "Solarized Dark",
  "workbench.preferredLightColorTheme": "Solarized Dark",
  "workbench.iconTheme": "material-icon-theme",
  "sync.quietSync": true,
  "json.maxItemsComputed": 50000,
  "liveServer.settings.donotShowInfoMsg": true,
  // Prettier format
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // Better commend setting
  "better-comments.multilineComments": true,
  "better-comments.highlightPlainText": false,
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "todo",
      "color": "#FF8C00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],
  "editor.lineNumbers": "relative",
  /* ================================ 
    Shopify Liquid Template Snippets setting
    ================================ */
  "emmet.includeLanguages": {
    "liquid": "html"
  },
  /**
   * Vim settings
   **/
  "vim.leader": "<space>",
  "vim.easymotion": true,
  "vim.incsearch": true,
  // Use systemclipboard to copy outside VScode
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.useCtrlKeys": true,
  "vim.normalModeKeyBindings": [
    {
      "before": ["<tab>"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["<S-tab>"],
      "commands": ["workbench.action.previousEditor"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  /* ================================ 
                In Visual mode
       ================================ */
  // in visual mode, press v and selected many row
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],
  "vim.visualModeKeyBindings": [
    // In visual mode iI aA oO goes to insert mode
    // This setting for mistake some unknow key press.
    {
      "before": ["i"],
      "after": ["<Esc>", "i"]
    },
    {
      "before": ["I"],
      "after": ["<Esc>", "I"]
    },
    {
      "before": ["a"],
      "after": ["<Esc>", "a"]
    },
    {
      "before": ["A"],
      "after": ["<Esc>", "A"]
    },
    {
      "before": ["o"],
      "after": ["<Esc>", "o"]
    },
    {
      "before": ["O"],
      "after": ["<Esc>", "O"]
    },
    // Use 2 time ">" or "<" to indent, this is replace tab
    {
      "before": [">"],
      "after": [">", "g", "v"]
    },
    {
      "before": ["<"],
      "after": ["<", "g", "v"]
    }
  ],
  // Bind ( to 'i(' in operator pending mode makes 'y(' and 'c(' work like 'yi(' and 'ci(' respectively.
  "vim.operatorPendingModeKeyBindingsNonRecursive": [
    {
      "before": ["("],
      "after": ["i("]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "f"],
      "commands": ["revealInExplorer"]
    },
    // Split panel
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.splitEditor"]
    },
    // leader == spacebar,
    // h == home go to the first charactor of line
    // l == end go to the last charactor of line
    //
    {
      "before": ["<leader>", "h"],
      "after": ["_"]
    },
    {
      "before": ["<leader>", "l"],
      "after": ["$"]
    },
    {
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    }
  ],
  //
  //
  //
  //
  //
  //

  // Setting color theme
  "workbench.colorTheme": "pantasio",
  // Setting programming language
  "redhat.telemetry.enabled": false,
  "remote.SSH.remotePlatform": {
    "aws-blog": "linux"
  },
  // ssh remote setting
  "remote.SSH.defaultForwardedPorts": [],
  "terminal.integrated.cursorStyle": "line",
  "editor.cursorBlinking": "phase",
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.defaultProfile.linux": "fish",
  "security.workspace.trust.untrustedFiles": "open",
  "workbench.editorAssociations": {
    "*.ps1": "default"
  },
  "diffEditor.renderSideBySide": false,
  "bracket-pair-colorizer-2.depreciation-notice": false,
  "bracketPairColorizer.depreciation-notice": false,
  "keyboard.dispatch": "keyCode", // Fix error unexpert
  "settingsSync.ignoredExtensions": [],
  "terminal.explorerKind": "external",
  "terminal.external.linuxExec": "alacritty",
  "editor.guides.bracketPairs": true,
  "zenMode.hideTabs": false,
  "editor.scrollBeyondLastColumn": 8,
  "markdownlint.customRules": ["\"MD013\": false"],
  "editor.rulers": [
    {
      "column": 80 // spacing of 1st column from left
    },
    {
      "column": 100, // spacing of 1st column from left
      "color": "#38172b" // orange, Go Vols!
    } // 2nd ruler with no color option
  ],
  //
  //
  // Recommended Dart & Flutter settings
  // Ref: https://dartcode.org/docs/recommended-settings/
  "dart.env": {
    // Chrome testing device.
    "CHROME_EXECUTABLE": "/usr/bin/google-chrome-stable",

    "editor.formatOnSave": true,
    "editor.formatOnType": true,

    // Draw a guide line at 80 characters, where Dart's formatting will wrap code.
    "editor.rulers": [80],

    // Disables built-in highlighting of words that match your selection. Without
    // this, all instances of the selected text will be highlighted, interfering
    // with Dart's ability to highlight only exact references to the selected variable.
    "editor.selectionHighlight": false,

    // By default, VS Code prevents code completion from popping open when in
    // "snippet mode" (editing placeholders in inserted code). Setting this option
    // to `false` stops that and allows completion to open as normal, as if you
    // weren't in a snippet placeholder.
    "editor.suggest.snippetsPreventQuickSuggestions": false,

    // By default, VS Code will pre-select the most recently used item from code
    // completion. This is usually not the most relevant item.
    //
    // "first" will always select top item
    // "recentlyUsedByPrefix" will filter the recently used items based on the
    //     text immediately preceding where completion was invoked.
    "editor.suggestSelection": "first",

    // Allows pressing <TAB> to complete snippets such as `for` even when the
    // completion list is not visible.
    "editor.tabCompletion": "onlySnippets",

    // By default, VS Code will populate code completion with words found in the
    // current file when a language service does not provide its own completions.
    // This results in code completion suggesting words when editing comments and
    // strings. This setting will prevent that.
    "editor.wordBasedSuggestions": false
  },
  // Causes the debug view to automatically appear when a breakpoint is hit. This
  // setting is global and not configurable per-language.
  "debug.openDebug": "openOnDebugBreak",

  // By default, VS Code will only switch to the Debug Console when you start
  // debugging the first time in a session. This setting tells VS Code to always
  // switch to the Debug Console when starting a session, so you can see the
  // programs output.
  "debug.internalConsoleOptions": "openOnSessionStart",
  //

  // ########################
  // markdown preview setting
  // ########################

  "markdown.preview.fontFamily": "'SauceCodePro Nerd Font', -apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
  "markdown-preview-enhanced.codeBlockTheme": "darcula.css",
  "markdown-preview-enhanced.mermaidTheme": "default",
  "markdown-preview-enhanced.previewTheme": "atom-dark.css",
  "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": false,
  "markdown.styles": ["./MarkdownStyles.css"],
  // #########################

  "editor.tabSize": 2,
  "[python]": {
    "editor.formatOnType": true
  },
  "gitlens.views.contributors.showStatistics": true,
  /* -------------------------------------------------------
	* START     ===== Spell Check =========
			 
	*/
  "cSpell.showCommandsInEditorContextMenu": false,
	"cSpell.language": "en,en-US,vi",
	"cSpell.userWords": [
		"Commandline",
		"Dont",
		"fileutils",
		"icontheme",
		"pantasio"
	]
			 
	/*
	*     ===== Spell Check =========
	-----------------  END ---------------------------------*/

  /* Evondev settings.jsona
    "editor.fontFamily": "SF Mono, Source Code Pro, Input Mono, Inconsolata,  Arial, Helvetica, sans-serif",
    "editor.wordWrap": "on",
    "editor.lineHeight": 30,
    "files.trimTrailingWhitespace": true,
    "editor.cursorWidth": 3,
    "explorer.confirmDelete": false,
    "editor.minimap.renderCharacters": false,
    "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "vue-html": "html"
    },
    "emmet.showExpandedAbbreviation": "inMarkupAndStylesheetFilesOnly",
    "editor.tabSize": 2,
    "editor.formatOnSave": true,
    "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "workbench.iconTheme": "material-icon-theme",
    "javascript.updateImportsOnFileMove.enabled": "always",
    "gitlens.advanced.messages": {
    "suppressLineUncommittedWarning": true
    },
    "terminal.integrated.rendererType": "dom",
    "debug.console.fontSize": 14,
    "explorer.confirmDragAndDrop": false,
    "files.autoSaveDelay": 5000,
    "editor.renderLineHighlight": "none",
    "editor.fontLigatures": true,
    "liveServer.settings.donotShowInfoMsg": true,
    "liveServer.settings.donotVerifyTags": true,
    "eslint.alwaysShowStatus": true,
    "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "emmet.triggerExpansionOnTab": true,
    "workbench.startupEditor": "newUntitledFile",
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "editor.wordWrapColumn": 100,
    "color-highlight.markerType": "underline",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.letterSpacing": 0.6,
    "window.zoomLevel": 1.5,
    "powermode.enabled": true,
    "powermode.enableShake": false,
    "powermode.enableStatusBarComboTimer": false,
    "powermode.enableStatusBarComboCounter": false,
    "powermode.explosionOffset": 0.2,
    "powermode.explosionSize": 3.5,
    "editor.fontSize": 13,
    "workbench.editor.untitled.hint": "hidden",
    "terminal.integrated.fontSize": 13,
    "workbench.colorTheme": "Dracula high contrast",
    "security.workspace.trust.untrustedFiles": "open",
    "workbench.fontAliasing": "auto",
    "editor.cursorBlinking": "solid"
     
    */
  /*"workbench.colorCustomizations": {
    "terminal.background":"#1D2021",
    "terminal.foreground":"#A89984",
    "terminalCursor.background":"#A89984",
    "terminalCursor.foreground":"#A89984",
    "terminal.ansiBlack":"#1D2021",
    "terminal.ansiBlue":"#0D6678",
    "terminal.ansiBrightBlack":"#665C54",
    "terminal.ansiBrightBlue":"#0D6678",
    "terminal.ansiBrightCyan":"#8BA59B",
    "terminal.ansiBrightGreen":"#95C085",
    "terminal.ansiBrightMagenta":"#8F4673",
    "terminal.ansiBrightRed":"#FB543F",
    "terminal.ansiBrightWhite":"#FDF4C1",
    "terminal.ansiBrightYellow":"#FAC03B",
    "terminal.ansiCyan":"#8BA59B",
    "terminal.ansiGreen":"#95C085",
    "terminal.ansiMagenta":"#8F4673",
    "terminal.ansiRed":"#FB543F",
    "terminal.ansiWhite":"#A89984",
    "terminal.ansiYellow":"#FAC03B"
    }
    */
}