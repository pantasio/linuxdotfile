# keybingding


# setting variables for later use
# use xrandr and/or arandr to know the names of your monitors
# use this line to tell which monitor is on the right
# xrandr --output DVI-I-2 --right-of DVI-I-1 --auto
# exec --no-startup-id xrandr --output LVDS1 --mode 1366x768 --output DP3 --mode 1920x1080 --right-of LVDS1
# exec --no-startup-id xrandr --output DVI-I-0 --right-of HDMI-0 --auto
# exec --no-startup-id xrandr --output DVI-1 --right-of DVI-0 --auto
# exec --no-startup-id xrandr --output DVI-D-1 --right-of DVI-I-1 --auto
# exec --no-startup-id xrandr --output HDMI-2 --right-of HDMI-1 --auto

# current setup

set $BenQMonitor HDMI-A-1
set $PhilipsMonitor HDMI-A-0

# Other Examples

#set $firstMonitor DP3
#set $secondMonitor LVDS1

#set $firstMonitor DVI-I-0
#set $secondMonitor HDMI-0

#set $firstMonitor DVI-0
#set $secondMonitor DVI-1

#set $firstMonitor DVI-I-1
#set $secondMonitor DVI-D-1

#set $firstMonitor HDMI-1
#set $secondMonitor HDMI-2

workspace 1 output $PhilipsMonitor
workspace 2 output $PhilipsMonitor
workspace 3 output $PhilipsMonitor
workspace 4 output $PhilipsMonitor
workspace 5 output $PhilipsMonitor
workspace 6 output $PhilipsMonitor
workspace 7 output $PhilipsMonitor
workspace 8 output $PhilipsMonitor
workspace 9 output $PhilipsMonitor
workspace 10 output $PhilipsMonitor

workspace 11 output $PhilipsMonitor
workspace 12 output $PhilipsMonitor
workspace 13 output $PhilipsMonitor
workspace 14 output $PhilipsMonitor
workspace 15 output $PhilipsMonitor
workspace 16 output $BenQMonitor
workspace 17 output $BenQMonitor
workspace 18 output $BenQMonitor
workspace 19 output $BenQMonitor
workspace 20 output $BenQMonitor

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# Use ALT + number to control WS
bindsym Mod1+1 workspace 11
bindsym Mod1+2 workspace 12
bindsym Mod1+3 workspace 13
bindsym Mod1+4 workspace 14
bindsym Mod1+5 workspace 15
bindsym Mod1+6 workspace 16
bindsym Mod1+7 workspace 17
bindsym Mod1+8 workspace 18
bindsym Mod1+9 workspace 19
bindsym Mod1+0 workspace 20

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1; workspace 1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace 5; workspace 5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8
bindsym $mod+Shift+9 move container to workspace 9; workspace 9
bindsym $mod+Shift+0 move container to workspace 10; workspace 10

# Use ALT + Shift + number to control WS
bindsym Mod1+Shift+1 move container to workspace 11; workspace 11
bindsym Mod1+Shift+2 move container to workspace 12; workspace 12
bindsym Mod1+Shift+3 move container to workspace 13; workspace 13
bindsym Mod1+Shift+4 move container to workspace 14; workspace 14
bindsym Mod1+Shift+5 move container to workspace 15; workspace 15
bindsym Mod1+Shift+6 move container to workspace 16; workspace 16
bindsym Mod1+Shift+7 move container to workspace 17; workspace 17
bindsym Mod1+Shift+8 move container to workspace 18; workspace 18
bindsym Mod1+Shift+9 move container to workspace 19; workspace 19
bindsym Mod1+Shift+0 move container to workspace 20; workspace 20


################# moving around workspaces         

# next/previous workspace
# 2 way: Alt+Tab 
bindsym Mod1+Tab workspace next
bindsym Mod1+Shift+Tab workspace prev
        
# Or Ctl+Alt+ arrow
# bindsym Mod1+Ctrl+Right workspace next
bindsym $mod+mod1+Right workspace next
# bindsym Mod1+Ctrl+Left workspace prev
bindsym $mod+mod1+Left workspace prev

# Swap workspace the last workspace
bindsym $mod+Tab workspace back_and_forth

# Move your all windown to next workspace
# If you have 4 container terminal in workspace 10, now you wanna move all 4 container to another empty workspace 
# press Super+
# Sample 
# bindsym $mod+Ctrl+b move workspace to output next


# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

################# Tiling parameters                

# orientation for new workspaces
default_orientation horizontal

# split in horizontal orientation
# Super+ALT+ b OR v
# Mean  B is beside
#       V is vertical
bindsym $mod+Mod1+b split h
# split in vertical orientation
bindsym $mod+Mod1+v split v

# enter fullscreen mode for the focused container
# Super + F in arcolinux is execute thunar
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# qwerty/azerty issue for letter z
bindsym $mod+F10 layout stacking        # I still dont know how to use 
bindsym $mod+F11 layout tabbed          # this is so usefull when i use multi VScode or Obsidian, just use winkey+arrow to swap 
bindsym $mod+F12 layout toggle split    # this is ez to remember

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

################# border control                   

# Border control
hide_edge_borders both
bindsym $mod+shift+b exec --no-startup-id i3-msg border toggle

# changing border style
# super+t in arcolinux is starting terminal
bindsym $mod+t border normal
bindsym $mod+y border pixel 2
bindsym $mod+u border none

# new_window pixel 1
new_window normal
# new_window none

# new_float pixel 1
new_float normal
# new_float none

